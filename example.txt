##You can use the example below to test the functions

> source('C:/Users/Toshiba/ProgrammingAssignment2/cachematrix.R')

##Creating a Matrix and testing its inverse
> x=matrix(1:4,2,2)
> x
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> solve(x)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5

##We store the matrix 
> y=makeCacheMatrix(x)

##Solving it the first time calculates the inverse
> cacheSolve(y)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5

##Solving it the second time returns the cached value
> cacheSolve(y)
getting cached data
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5

##Creating a new matrix
> x=matrix(5:8,2,2)
> x
     [,1] [,2]
[1,]    5    7
[2,]    6    8

##We change the matrix in 'y'
> y$set(x)

##solving 'y' again recalculates the inverse because 
##the matrix has changed
> cacheSolve(y)
     [,1] [,2]
[1,]   -4  3.5
[2,]    3 -2.5

##Solving it another time returns the cached value
> cacheSolve(y)
getting cached data
     [,1] [,2]
[1,]   -4  3.5
[2,]    3 -2.5